use crate::Bencher;

mod meta;
mod tree;

pub use meta::{EntryLocation, EntryMeta};
pub(crate) use tree::EntryTree;

type ModulePathComponents = std::str::Split<'static, &'static str>;

/// Benchmark entries generated by `#[divan::bench]`.
#[linkme::distributed_slice]
pub static BENCH_ENTRIES: [BenchEntry] = [..];

/// Group entries generated by `#[divan::bench_group]`.
#[linkme::distributed_slice]
pub static GROUP_ENTRIES: [GroupEntry] = [..];

/// Compile-time entry for a benchmark, generated by `#[divan::bench]`.
pub struct BenchEntry {
    /// Entry metadata.
    pub meta: EntryMeta,

    /// The benchmarking function.
    pub bench: fn(Bencher),
}

/// Compile-time entry for a benchmark group, generated by
/// `#[divan::bench_group]`.
pub struct GroupEntry {
    /// Entry metadata.
    pub meta: EntryMeta,
}
